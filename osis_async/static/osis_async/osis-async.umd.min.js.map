{"version":3,"file":"osis-async.umd.min.js","sources":["../../../frontend/components/AsyncTask.vue","../../../frontend/components/AsyncTask.vue","../../../frontend/AsyncTasksViewer.vue","../../../frontend/AsyncTasksViewer.vue","../../../frontend/i18n.ts","../../../frontend/main.ts"],"sourcesContent":["<!--\r\n  -\r\n  -   OSIS stands for Open Student Information System. It's an application\r\n  -   designed to manage the core business of higher education institutions,\r\n  -   such as universities, faculties, institutes and professional schools.\r\n  -   The core business involves the administration of students, teachers,\r\n  -   courses, programs and so on.\r\n  -\r\n  -   Copyright (C) 2015-2023 Université catholique de Louvain (http://www.uclouvain.be)\r\n  -\r\n  -   This program is free software: you can redistribute it and/or modify\r\n  -   it under the terms of the GNU General Public License as published by\r\n  -   the Free Software Foundation, either version 3 of the License, or\r\n  -   (at your option) any later version.\r\n  -\r\n  -   This program is distributed in the hope that it will be useful,\r\n  -   but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n  -   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n  -   GNU General Public License for more details.\r\n  -\r\n  -   A copy of this license - GNU General Public License - is available\r\n  -   at the root of the source code of this program.  If not,\r\n  -   see http://www.gnu.org/licenses/.\r\n  -\r\n  -->\r\n<template>\r\n  <li class=\"async-task-dropdown-item container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 text-left\">\r\n        <span :class=\"{ 'font-bold': !isDone }\">\r\n          {{ name }}\r\n        </span>\r\n        <span class=\"async-task-date pull-right\">\r\n          <em>{{ asyncDate }}</em>\r\n        </span>\r\n      </div>\r\n      <div class=\"col-md-12 text-left\">\r\n        <span\r\n            class=\"async-task-text\"\r\n            v-html=\"description\"\r\n        />\r\n      </div>\r\n      <div class=\"col-md-12\">\r\n        <div class=\"progress\">\r\n          <div\r\n              class=\"progress-bar progress-bar-striped\"\r\n              :class=\"{ 'active': isProcessing, 'progress-bar-success': isDone, 'progress-bar-danger': isInError }\"\r\n              role=\"progressbar\"\r\n              :aria-valuenow=\"computedProgression\"\r\n              aria-valuemin=\"0\"\r\n              aria-valuemax=\"100\"\r\n              :style=\"{ width: computedProgression + '%' }\"\r\n          >\r\n            <template v-if=\"isInError\">\r\n              {{ $t('async_task.error_task') }}\r\n            </template>\r\n            <template v-if=\"!isInError\">\r\n               {{ computedProgression }}%\r\n            </template>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </li>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\";\r\nimport type {PropType} from \"vue\";\r\n\r\nexport default defineComponent({\r\n  name: 'AsyncTask',\r\n  props: {\r\n    uuid: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    name: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    description: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    progression: {\r\n      type: Number,\r\n      required: true,\r\n    },\r\n    state: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    createdAt: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    startedAt: {\r\n      type: String as PropType<string | null>,\r\n      default: null,\r\n    },\r\n    completedAt: {\r\n      type: String as PropType<string | null>,\r\n      default: null,\r\n    },\r\n  },\r\n  computed: {\r\n    isProcessing: function () {\r\n      return this.state === 'PROCESSING';\r\n    },\r\n    isDone: function () {\r\n      return this.state === 'DONE';\r\n    },\r\n    isInError: function () {\r\n      return this.state === 'ERROR';\r\n    },\r\n    computedProgression: function () {\r\n      return (this.isInError) ? 100: this.progression;\r\n    },\r\n    asyncDate: function () {\r\n      if (this.completedAt) {\r\n        return `${this.$t('async_task.completed_at')} : ${this.completedAt}`;\r\n      } else if (this.startedAt) {\r\n        return `${this.$t('async_task.started_at')} : ${this.startedAt}`;\r\n      } else {\r\n        return `${this.$t('async_task.created_at')} : ${this.createdAt}`;\r\n      }\r\n    },\r\n  },\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.async-task-dropdown-item {\r\n  padding: 10px;\r\n\r\n  .row {\r\n    margin: 0;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: #f5f5f5;\r\n  }\r\n\r\n  .label {\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .async-task-date {\r\n    padding-right: 5px;\r\n  }\r\n\r\n  .progress {\r\n    margin-top: 5px;\r\n\r\n    .progress-bar {\r\n      min-width: 2em;\r\n    }\r\n  }\r\n}\r\n\r\n.font-bold {\r\n  font-weight: bold;\r\n}\r\n</style>\r\n","<!--\r\n  -\r\n  -   OSIS stands for Open Student Information System. It's an application\r\n  -   designed to manage the core business of higher education institutions,\r\n  -   such as universities, faculties, institutes and professional schools.\r\n  -   The core business involves the administration of students, teachers,\r\n  -   courses, programs and so on.\r\n  -\r\n  -   Copyright (C) 2015-2023 Université catholique de Louvain (http://www.uclouvain.be)\r\n  -\r\n  -   This program is free software: you can redistribute it and/or modify\r\n  -   it under the terms of the GNU General Public License as published by\r\n  -   the Free Software Foundation, either version 3 of the License, or\r\n  -   (at your option) any later version.\r\n  -\r\n  -   This program is distributed in the hope that it will be useful,\r\n  -   but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n  -   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n  -   GNU General Public License for more details.\r\n  -\r\n  -   A copy of this license - GNU General Public License - is available\r\n  -   at the root of the source code of this program.  If not,\r\n  -   see http://www.gnu.org/licenses/.\r\n  -\r\n  -->\r\n<template>\r\n  <li class=\"async-task-dropdown-item container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 text-left\">\r\n        <span :class=\"{ 'font-bold': !isDone }\">\r\n          {{ name }}\r\n        </span>\r\n        <span class=\"async-task-date pull-right\">\r\n          <em>{{ asyncDate }}</em>\r\n        </span>\r\n      </div>\r\n      <div class=\"col-md-12 text-left\">\r\n        <span\r\n            class=\"async-task-text\"\r\n            v-html=\"description\"\r\n        />\r\n      </div>\r\n      <div class=\"col-md-12\">\r\n        <div class=\"progress\">\r\n          <div\r\n              class=\"progress-bar progress-bar-striped\"\r\n              :class=\"{ 'active': isProcessing, 'progress-bar-success': isDone, 'progress-bar-danger': isInError }\"\r\n              role=\"progressbar\"\r\n              :aria-valuenow=\"computedProgression\"\r\n              aria-valuemin=\"0\"\r\n              aria-valuemax=\"100\"\r\n              :style=\"{ width: computedProgression + '%' }\"\r\n          >\r\n            <template v-if=\"isInError\">\r\n              {{ $t('async_task.error_task') }}\r\n            </template>\r\n            <template v-if=\"!isInError\">\r\n               {{ computedProgression }}%\r\n            </template>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </li>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {defineComponent} from \"vue\";\r\nimport type {PropType} from \"vue\";\r\n\r\nexport default defineComponent({\r\n  name: 'AsyncTask',\r\n  props: {\r\n    uuid: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    name: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    description: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    progression: {\r\n      type: Number,\r\n      required: true,\r\n    },\r\n    state: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    createdAt: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    startedAt: {\r\n      type: String as PropType<string | null>,\r\n      default: null,\r\n    },\r\n    completedAt: {\r\n      type: String as PropType<string | null>,\r\n      default: null,\r\n    },\r\n  },\r\n  computed: {\r\n    isProcessing: function () {\r\n      return this.state === 'PROCESSING';\r\n    },\r\n    isDone: function () {\r\n      return this.state === 'DONE';\r\n    },\r\n    isInError: function () {\r\n      return this.state === 'ERROR';\r\n    },\r\n    computedProgression: function () {\r\n      return (this.isInError) ? 100: this.progression;\r\n    },\r\n    asyncDate: function () {\r\n      if (this.completedAt) {\r\n        return `${this.$t('async_task.completed_at')} : ${this.completedAt}`;\r\n      } else if (this.startedAt) {\r\n        return `${this.$t('async_task.started_at')} : ${this.startedAt}`;\r\n      } else {\r\n        return `${this.$t('async_task.created_at')} : ${this.createdAt}`;\r\n      }\r\n    },\r\n  },\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.async-task-dropdown-item {\r\n  padding: 10px;\r\n\r\n  .row {\r\n    margin: 0;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: #f5f5f5;\r\n  }\r\n\r\n  .label {\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .async-task-date {\r\n    padding-right: 5px;\r\n  }\r\n\r\n  .progress {\r\n    margin-top: 5px;\r\n\r\n    .progress-bar {\r\n      min-width: 2em;\r\n    }\r\n  }\r\n}\r\n\r\n.font-bold {\r\n  font-weight: bold;\r\n}\r\n</style>\r\n","<!--\r\n  -\r\n  -   OSIS stands for Open Student Information System. It's an application\r\n  -   designed to manage the core business of higher education institutions,\r\n  -   such as universities, faculties, institutes and professional schools.\r\n  -   The core business involves the administration of students, teachers,\r\n  -   courses, programs and so on.\r\n  -\r\n  -   Copyright (C) 2015-2021 Université catholique de Louvain (http://www.uclouvain.be)\r\n  -\r\n  -   This program is free software: you can redistribute it and/or modify\r\n  -   it under the terms of the GNU General Public License as published by\r\n  -   the Free Software Foundation, either version 3 of the License, or\r\n  -   (at your option) any later version.\r\n  -\r\n  -   This program is distributed in the hope that it will be useful,\r\n  -   but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n  -   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n  -   GNU General Public License for more details.\r\n  -\r\n  -   A copy of this license - GNU General Public License - is available\r\n  -   at the root of the source code of this program.  If not,\r\n  -   see http://www.gnu.org/licenses/.\r\n  -\r\n  -->\r\n<template>\r\n  <a\r\n      class=\"dropdown-toggle\"\r\n      data-toggle=\"dropdown\"\r\n      role=\"button\"\r\n      aria-haspopup=\"true\"\r\n      aria-expanded=\"false\"\r\n  >\r\n    <div\r\n        class=\"download\"\r\n        :data-count=\"pendingAsyncTasksCount\"\r\n        :class=\"{'show-count': pendingAsyncTasksCount }\"\r\n    >\r\n      <span class=\"fas fa-tasks\" />\r\n    </div>\r\n  </a>\r\n  <ul\r\n      class=\"dropdown-menu async-tasks-dropdown\"\r\n  >\r\n    <li v-if=\"error\">\r\n      <div\r\n          class=\"alert alert-warning\"\r\n          role=\"alert\"\r\n      >\r\n        {{ error }}\r\n      </div>\r\n    </li>\r\n    <AsyncTask\r\n        v-for=\"asyncTask in asyncTasks\"\r\n        :key=\"asyncTask.uuid\"\r\n        :uuid=\"asyncTask.uuid\"\r\n        :name=\"asyncTask.name\"\r\n        :description=\"asyncTask.description\"\r\n        :progression=\"asyncTask.progression\"\r\n        :state=\"asyncTask.state\"\r\n        :created-at=\"asyncTask.created_at\"\r\n        :started-at=\"asyncTask.started_at\"\r\n        :completed-at=\"asyncTask.completed_at\"\r\n    />\r\n    <li\r\n        v-if=\"!loading && !asyncTasks.length\"\r\n    >\r\n      {{ $t('async_tasks_viewer.no_results') }}\r\n    </li>\r\n    <li\r\n        v-if=\"loading\"\r\n        class=\"progress\"\r\n    >\r\n      <div\r\n          class=\"progress-bar progress-bar-striped active\"\r\n          role=\"progressbar\"\r\n          aria-valuenow=\"100\"\r\n          aria-valuemin=\"0\"\r\n          aria-valuemax=\"100\"\r\n          style=\"width: 100%\"\r\n      >\r\n        <span class=\"sr-only\">\r\n          {{ $t('async_tasks_viewer.load_more') }}\r\n        </span>\r\n      </div>\r\n    </li>\r\n    <li\r\n        v-else-if=\"hasNextPage\"\r\n        class=\"text-center\"\r\n    >\r\n      <button\r\n          type=\"button\"\r\n          class=\"btn btn-link\"\r\n          @click=\"loadMore\"\r\n      >\r\n        {{ $t('async_tasks_viewer.load_more') }}\r\n      </button>\r\n    </li>\r\n  </ul>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport AsyncTask from './components/AsyncTask.vue';\r\nimport {defineComponent} from \"vue\";\r\nimport type {EntriesResponse, Entry} from \"./interfaces\";\r\nimport type jQuery from \"jquery\";\r\n\r\ndeclare global {\r\n  interface Window {\r\n    jQuery: typeof jQuery;\r\n  }\r\n}\r\n\r\nexport default defineComponent({\r\n  name: 'AsyncTasksViewer',\r\n  components: {AsyncTask},\r\n  props: {\r\n    url: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    interval: {\r\n      type: Number,\r\n      default: 300,\r\n    },\r\n    limit: {\r\n      type: Number,\r\n      default: 15,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      asyncTasks: [] as Entry[],\r\n      hasNextPage: false,\r\n      pageSize: this.limit,\r\n      error: '',\r\n      loading: true,\r\n      pendingAsyncTasksCount: 0,\r\n      timer: 0,\r\n    };\r\n  },\r\n  unmounted() {\r\n    window.clearTimeout(this.timer);\r\n  },\r\n  mounted() {\r\n    void this.fetchAsyncTasks();\r\n    // This next line lets the dropdown menu open after clicking inside it. See the bootstrap source code here:\r\n    // https://github.com/twbs/bootstrap/blob/0b9c4a4007c44201dce9a6cc1a38407005c26c86/js/dropdown.js#L160\r\n    window.jQuery(document).on('click.bs.dropdown.data-api', '.async-tasks-dropdown', (e: Event) => e.stopPropagation());\r\n    window.jQuery(document).on('AsyncTasksViewer:fetchAsyncTasks', () => void this.fetchAsyncTasks());\r\n  },\r\n  methods: {\r\n    refreshTimer: function () {\r\n      let interval = this.interval;\r\n      if (this.pendingAsyncTasksCount > 0) {\r\n        // in case there is actual pending async task, set the interval to 5 seconds\r\n        interval = 5;\r\n      }\r\n      window.clearTimeout(this.timer);\r\n      this.timer = window.setTimeout(() => {\r\n        void this.fetchAsyncTasks();\r\n      }, interval * 1000);\r\n    },\r\n    fetchAsyncTasks: async function () {\r\n      try {\r\n        const response = await fetch(`${this.url}?limit=${this.pageSize}`);\r\n        if (response.status >= 200 && response.status < 300) {\r\n          const newAsyncTasks = await response.json() as EntriesResponse;\r\n          this.asyncTasks = newAsyncTasks.results;\r\n          this.hasNextPage = !!newAsyncTasks.next;\r\n          this.pendingAsyncTasksCount = newAsyncTasks.pending_count;\r\n          this.refreshTimer();\r\n        } else {\r\n          this.error = `${this.$t('async_tasks_viewer.error_fetch_async_tasks')} ( ${response.statusText} )`;\r\n        }\r\n      } catch (e) {\r\n        this.error = `${this.$t('async_tasks_viewer.error_fetch_async_tasks')} ( ${(e as Error).message} )`;\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    /**\r\n     * We use the ?limit to get new tasks when clicking on the 'Load more' button as we need to keep all the previous\r\n     * tasks and add the new ones. All this will be overriden by the setInterval that fetch all the async tasks if we\r\n     * use the ?offset. So it may generate a big request, but it is very unlikely.\r\n     */\r\n    loadMore: async function (e: Event) {\r\n      e.stopPropagation();  // prevent the dropdown from closing\r\n      this.loading = true;\r\n      this.pageSize += this.limit;\r\n      await this.fetchAsyncTasks();\r\n    },\r\n  },\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n#async-tasks-viewer {\r\n  .async-tasks-dropdown {\r\n    padding: 15px;\r\n    overflow-y: scroll;\r\n    max-height: 320px;\r\n    min-width: 320px;\r\n  }\r\n\r\n  .alert.alert-warning {\r\n    margin-top: 20px;\r\n  }\r\n\r\n  //-------------------------------------------------\r\n  // Code from https://codepen.io/ryanmorr/pen/RPZZjd\r\n  .download {\r\n    display: inline-block;\r\n    position: relative;\r\n\r\n    &::before,\r\n    &::after {\r\n      color: #777;\r\n      text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);\r\n    }\r\n\r\n    &::after { // async tasks count\r\n      font-family: Arial sans-serif;\r\n      font-size: 0.8em;\r\n      font-weight: 700;\r\n      position: absolute;\r\n      top: -10px;\r\n      right: -15px;\r\n      padding: 1px 3px;\r\n      line-height: 100%;\r\n      border: 2px #fff solid;\r\n      border-radius: 60px;\r\n      background: #db3434;\r\n      opacity: 0;\r\n      content: attr(data-count);\r\n      transform: scale(0.5);\r\n      transition: transform, opacity;\r\n      transition-duration: 0.3s;\r\n      transition-timing-function: ease-out;\r\n      color: #fff;\r\n      z-index: 2;\r\n    }\r\n\r\n    &.show-count::after {\r\n      transform: scale(1);\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  //-------------------------------------------------\r\n}\r\n</style>\r\n","<!--\r\n  -\r\n  -   OSIS stands for Open Student Information System. It's an application\r\n  -   designed to manage the core business of higher education institutions,\r\n  -   such as universities, faculties, institutes and professional schools.\r\n  -   The core business involves the administration of students, teachers,\r\n  -   courses, programs and so on.\r\n  -\r\n  -   Copyright (C) 2015-2021 Université catholique de Louvain (http://www.uclouvain.be)\r\n  -\r\n  -   This program is free software: you can redistribute it and/or modify\r\n  -   it under the terms of the GNU General Public License as published by\r\n  -   the Free Software Foundation, either version 3 of the License, or\r\n  -   (at your option) any later version.\r\n  -\r\n  -   This program is distributed in the hope that it will be useful,\r\n  -   but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n  -   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n  -   GNU General Public License for more details.\r\n  -\r\n  -   A copy of this license - GNU General Public License - is available\r\n  -   at the root of the source code of this program.  If not,\r\n  -   see http://www.gnu.org/licenses/.\r\n  -\r\n  -->\r\n<template>\r\n  <a\r\n      class=\"dropdown-toggle\"\r\n      data-toggle=\"dropdown\"\r\n      role=\"button\"\r\n      aria-haspopup=\"true\"\r\n      aria-expanded=\"false\"\r\n  >\r\n    <div\r\n        class=\"download\"\r\n        :data-count=\"pendingAsyncTasksCount\"\r\n        :class=\"{'show-count': pendingAsyncTasksCount }\"\r\n    >\r\n      <span class=\"fas fa-tasks\" />\r\n    </div>\r\n  </a>\r\n  <ul\r\n      class=\"dropdown-menu async-tasks-dropdown\"\r\n  >\r\n    <li v-if=\"error\">\r\n      <div\r\n          class=\"alert alert-warning\"\r\n          role=\"alert\"\r\n      >\r\n        {{ error }}\r\n      </div>\r\n    </li>\r\n    <AsyncTask\r\n        v-for=\"asyncTask in asyncTasks\"\r\n        :key=\"asyncTask.uuid\"\r\n        :uuid=\"asyncTask.uuid\"\r\n        :name=\"asyncTask.name\"\r\n        :description=\"asyncTask.description\"\r\n        :progression=\"asyncTask.progression\"\r\n        :state=\"asyncTask.state\"\r\n        :created-at=\"asyncTask.created_at\"\r\n        :started-at=\"asyncTask.started_at\"\r\n        :completed-at=\"asyncTask.completed_at\"\r\n    />\r\n    <li\r\n        v-if=\"!loading && !asyncTasks.length\"\r\n    >\r\n      {{ $t('async_tasks_viewer.no_results') }}\r\n    </li>\r\n    <li\r\n        v-if=\"loading\"\r\n        class=\"progress\"\r\n    >\r\n      <div\r\n          class=\"progress-bar progress-bar-striped active\"\r\n          role=\"progressbar\"\r\n          aria-valuenow=\"100\"\r\n          aria-valuemin=\"0\"\r\n          aria-valuemax=\"100\"\r\n          style=\"width: 100%\"\r\n      >\r\n        <span class=\"sr-only\">\r\n          {{ $t('async_tasks_viewer.load_more') }}\r\n        </span>\r\n      </div>\r\n    </li>\r\n    <li\r\n        v-else-if=\"hasNextPage\"\r\n        class=\"text-center\"\r\n    >\r\n      <button\r\n          type=\"button\"\r\n          class=\"btn btn-link\"\r\n          @click=\"loadMore\"\r\n      >\r\n        {{ $t('async_tasks_viewer.load_more') }}\r\n      </button>\r\n    </li>\r\n  </ul>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport AsyncTask from './components/AsyncTask.vue';\r\nimport {defineComponent} from \"vue\";\r\nimport type {EntriesResponse, Entry} from \"./interfaces\";\r\nimport type jQuery from \"jquery\";\r\n\r\ndeclare global {\r\n  interface Window {\r\n    jQuery: typeof jQuery;\r\n  }\r\n}\r\n\r\nexport default defineComponent({\r\n  name: 'AsyncTasksViewer',\r\n  components: {AsyncTask},\r\n  props: {\r\n    url: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    interval: {\r\n      type: Number,\r\n      default: 300,\r\n    },\r\n    limit: {\r\n      type: Number,\r\n      default: 15,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      asyncTasks: [] as Entry[],\r\n      hasNextPage: false,\r\n      pageSize: this.limit,\r\n      error: '',\r\n      loading: true,\r\n      pendingAsyncTasksCount: 0,\r\n      timer: 0,\r\n    };\r\n  },\r\n  unmounted() {\r\n    window.clearTimeout(this.timer);\r\n  },\r\n  mounted() {\r\n    void this.fetchAsyncTasks();\r\n    // This next line lets the dropdown menu open after clicking inside it. See the bootstrap source code here:\r\n    // https://github.com/twbs/bootstrap/blob/0b9c4a4007c44201dce9a6cc1a38407005c26c86/js/dropdown.js#L160\r\n    window.jQuery(document).on('click.bs.dropdown.data-api', '.async-tasks-dropdown', (e: Event) => e.stopPropagation());\r\n    window.jQuery(document).on('AsyncTasksViewer:fetchAsyncTasks', () => void this.fetchAsyncTasks());\r\n  },\r\n  methods: {\r\n    refreshTimer: function () {\r\n      let interval = this.interval;\r\n      if (this.pendingAsyncTasksCount > 0) {\r\n        // in case there is actual pending async task, set the interval to 5 seconds\r\n        interval = 5;\r\n      }\r\n      window.clearTimeout(this.timer);\r\n      this.timer = window.setTimeout(() => {\r\n        void this.fetchAsyncTasks();\r\n      }, interval * 1000);\r\n    },\r\n    fetchAsyncTasks: async function () {\r\n      try {\r\n        const response = await fetch(`${this.url}?limit=${this.pageSize}`);\r\n        if (response.status >= 200 && response.status < 300) {\r\n          const newAsyncTasks = await response.json() as EntriesResponse;\r\n          this.asyncTasks = newAsyncTasks.results;\r\n          this.hasNextPage = !!newAsyncTasks.next;\r\n          this.pendingAsyncTasksCount = newAsyncTasks.pending_count;\r\n          this.refreshTimer();\r\n        } else {\r\n          this.error = `${this.$t('async_tasks_viewer.error_fetch_async_tasks')} ( ${response.statusText} )`;\r\n        }\r\n      } catch (e) {\r\n        this.error = `${this.$t('async_tasks_viewer.error_fetch_async_tasks')} ( ${(e as Error).message} )`;\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    /**\r\n     * We use the ?limit to get new tasks when clicking on the 'Load more' button as we need to keep all the previous\r\n     * tasks and add the new ones. All this will be overriden by the setInterval that fetch all the async tasks if we\r\n     * use the ?offset. So it may generate a big request, but it is very unlikely.\r\n     */\r\n    loadMore: async function (e: Event) {\r\n      e.stopPropagation();  // prevent the dropdown from closing\r\n      this.loading = true;\r\n      this.pageSize += this.limit;\r\n      await this.fetchAsyncTasks();\r\n    },\r\n  },\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n#async-tasks-viewer {\r\n  .async-tasks-dropdown {\r\n    padding: 15px;\r\n    overflow-y: scroll;\r\n    max-height: 320px;\r\n    min-width: 320px;\r\n  }\r\n\r\n  .alert.alert-warning {\r\n    margin-top: 20px;\r\n  }\r\n\r\n  //-------------------------------------------------\r\n  // Code from https://codepen.io/ryanmorr/pen/RPZZjd\r\n  .download {\r\n    display: inline-block;\r\n    position: relative;\r\n\r\n    &::before,\r\n    &::after {\r\n      color: #777;\r\n      text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);\r\n    }\r\n\r\n    &::after { // async tasks count\r\n      font-family: Arial sans-serif;\r\n      font-size: 0.8em;\r\n      font-weight: 700;\r\n      position: absolute;\r\n      top: -10px;\r\n      right: -15px;\r\n      padding: 1px 3px;\r\n      line-height: 100%;\r\n      border: 2px #fff solid;\r\n      border-radius: 60px;\r\n      background: #db3434;\r\n      opacity: 0;\r\n      content: attr(data-count);\r\n      transform: scale(0.5);\r\n      transition: transform, opacity;\r\n      transition-duration: 0.3s;\r\n      transition-timing-function: ease-out;\r\n      color: #fff;\r\n      z-index: 2;\r\n    }\r\n\r\n    &.show-count::after {\r\n      transform: scale(1);\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  //-------------------------------------------------\r\n}\r\n</style>\r\n","/*\r\n *\r\n *   OSIS stands for Open Student Information System. It's an application\r\n *   designed to manage the core business of higher education institutions,\r\n *   such as universities, faculties, institutes and professional schools.\r\n *   The core business involves the administration of students, teachers,\r\n *   courses, programs and so on.\r\n *\r\n *   Copyright (C) 2015-2021 Université catholique de Louvain (http://www.uclouvain.be)\r\n *\r\n *   This program is free software: you can redistribute it and/or modify\r\n *   it under the terms of the GNU General Public License as published by\r\n *   the Free Software Foundation, either version 3 of the License, or\r\n *   (at your option) any later version.\r\n *\r\n *   This program is distributed in the hope that it will be useful,\r\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n *   GNU General Public License for more details.\r\n *\r\n *   A copy of this license - GNU General Public License - is available\r\n *   at the root of the source code of this program.  If not,\r\n *   see http://www.gnu.org/licenses/.\r\n *\r\n */\r\n\r\nimport {createI18n} from 'vue-i18n';\r\nimport fr from \"./locales/fr\";\r\nimport en from \"./locales/en\";\r\n\r\nexport const i18n = createI18n({\r\n  locale: document.documentElement.lang || 'en',\r\n  messages: {\r\n    en,\r\n    fr,\r\n  },\r\n});\r\n","/*\r\n *\r\n *   OSIS stands for Open Student Information System. It's an application\r\n *   designed to manage the core business of higher education institutions,\r\n *   such as universities, faculties, institutes and professional schools.\r\n *   The core business involves the administration of students, teachers,\r\n *   courses, programs and so on.\r\n *\r\n *   Copyright (C) 2015-2021 Université catholique de Louvain (http://www.uclouvain.be)\r\n *\r\n *   This program is free software: you can redistribute it and/or modify\r\n *   it under the terms of the GNU General Public License as published by\r\n *   the Free Software Foundation, either version 3 of the License, or\r\n *   (at your option) any later version.\r\n *\r\n *   This program is distributed in the hope that it will be useful,\r\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n *   GNU General Public License for more details.\r\n *\r\n *   A copy of this license - GNU General Public License - is available\r\n *   at the root of the source code of this program.  If not,\r\n *   see http://www.gnu.org/licenses/.\r\n *\r\n */\r\n\r\n/* eslint-disable vue/prefer-import-from-vue */\r\nimport {createApp} from '@vue/runtime-dom'; // so that it can be spied on\r\nimport AsyncTasksViewer from './AsyncTasksViewer.vue';\r\nimport {i18n} from './i18n';\r\n\r\ninterface Props extends Record<string, unknown> {\r\n  url: string,\r\n  interval?: number,\r\n  limit?: number,\r\n}\r\n\r\ndocument.querySelectorAll<HTMLElement>('#async-tasks-viewer').forEach((elem) => {\r\n  const props: Props = {url: \"\", ...elem.dataset};\r\n  if (typeof elem.dataset.interval !== 'undefined') {\r\n    props.interval = Number.parseInt(elem.dataset.interval);\r\n  }\r\n  if (typeof elem.dataset.limit !== 'undefined') {\r\n    props.limit = Number.parseInt(elem.dataset.limit);\r\n  }\r\n  createApp(AsyncTasksViewer, props).use(i18n).mount(elem);\r\n});\r\n"],"names":["_sfc_main$1","defineComponent","_hoisted_1","_hoisted_3","_hoisted_5","_hoisted_6","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createElementBlock","_createElementVNode","_hoisted_2","_normalizeClass","_toDisplayString","_hoisted_4","_hoisted_7","_hoisted_8","_normalizeStyle","_createCommentVNode","_Fragment","_sfc_main","AsyncTask","interval","response","newAsyncTasks","_hoisted_9","_hoisted_10","_hoisted_12","_renderList","asyncTask","_createBlock","_component_AsyncTask","i18n","createI18n","en","fr","elem","props","createApp","AsyncTasksViewer"],"mappings":"6TAsEA,MAAAA,EAAeC,kBAAgB,CAC7B,KAAM,YACN,MAAO,CACL,KAAM,CACJ,KAAM,OACN,SAAU,EACZ,EACA,KAAM,CACJ,KAAM,OACN,SAAU,EACZ,EACA,YAAa,CACX,KAAM,OACN,SAAU,EACZ,EACA,YAAa,CACX,KAAM,OACN,SAAU,EACZ,EACA,MAAO,CACL,KAAM,OACN,SAAU,EACZ,EACA,UAAW,CACT,KAAM,OACN,SAAU,EACZ,EACA,UAAW,CACT,KAAM,OACN,QAAS,IACX,EACA,YAAa,CACX,KAAM,OACN,QAAS,IACX,CACF,EACA,SAAU,CACR,aAAc,UAAY,CACxB,OAAO,KAAK,QAAU,YACxB,EACA,OAAQ,UAAY,CAClB,OAAO,KAAK,QAAU,MACxB,EACA,UAAW,UAAY,CACrB,OAAO,KAAK,QAAU,OACxB,EACA,oBAAqB,UAAY,CACvB,OAAA,KAAK,UAAa,IAAK,KAAK,WACtC,EACA,UAAW,UAAY,CACrB,OAAI,KAAK,YACA,GAAG,KAAK,GAAG,yBAAyB,CAAC,MAAM,KAAK,WAAW,GACzD,KAAK,UACP,GAAG,KAAK,GAAG,uBAAuB,CAAC,MAAM,KAAK,SAAS,GAEvD,GAAG,KAAK,GAAG,uBAAuB,CAAC,MAAM,KAAK,SAAS,EAElE,CACF,CACF,CAAC,4ECrGUC,EAAA,CAAA,MAAM,yCAIH,MAAM,OAITC,EAAA,CAAA,MAAM,8DAMNC,EAAA,CAAA,MAAM,uBACEC,EAAA,CAAA,WAAA,iEAhBf,SAAAC,EAAAC,EAmCMC,EAnCNC,EAmCMC,EAAAC,EAAAC,EAAA,QAlCJC,YAOM,EAAAC,qBAAA,KAAAZ,EAAA,CAAAa,EAAA,mBANJ,MAEOC,EAAA,CAFKD,EAAA,mBAAA,MAAAZ,EAAA,CACPY,EAAAA,mBAAA,OAAA,CAEL,MAEOE,EAAA,eAAA,CAAA,YAAA,CAAAV,EAAA,MAAA,CAAA,CAAA,EADLW,kBAAwBX,EAAA,IAAA,EAAA,CAAA,EAAAQ,EAAA,mBAAA,OAAAI,EAAA,iEAG5B,CAAA,CAAA,CAAA,uBAEY,MAAiBf,EAAA,CACfW,EAAAA,mBAAA,OAAA,CAAA,MAAA,2CAsBR,KAAA,EAAAV,CAAA,CAAA,CAAA,uBAjBF,MAeMe,EAAA,CAAAL,EAAA,mBAdG,MAACM,EAAA,CAAAN,EAAAA,mBAED,MAAa,CACjB,uBAAe,CAAmB,oCAAA,CAAA,OAAAR,EAAA,aAAA,uBAAAA,EAAA,OAAA,sBAAAA,EAAA,SAAA,CAAA,CAAA,EACnC,KAAA,cACA,gBAAcA,EAAK,oBAClB,gBAAK,IAAA,gBAAA,YAEQe,EAAS,eAAA,CAAA,MAAAf,EAAA,oBAAA,IAAA,CAAA,EAAA,0IAGzB,EAAA,EAAA,GAAAgB,qBAAA,GAAA,EAAA,EAAAhB,EAAA,uCAAAM,YAAA,EAAAC,EAAA,mBAAAU,WAAA,CAAA,IAAA,GAAA,qHCyDZC,EAAexB,kBAAgB,CAC7B,KAAM,mBACN,WAAY,CAAC,UAAAyB,CAAS,EACtB,MAAO,CACL,IAAK,CACH,KAAM,OACN,SAAU,EACZ,EACA,SAAU,CACR,KAAM,OACN,QAAS,GACX,EACA,MAAO,CACL,KAAM,OACN,QAAS,EACX,CACF,EACA,MAAO,CACE,MAAA,CACL,WAAY,CAAC,EACb,YAAa,GACb,SAAU,KAAK,MACf,MAAO,GACP,QAAS,GACT,uBAAwB,EACxB,MAAO,CAAA,CAEX,EACA,WAAY,CACH,OAAA,aAAa,KAAK,KAAK,CAChC,EACA,SAAU,CACH,KAAK,kBAGH,OAAA,OAAO,QAAQ,EAAE,GAAG,6BAA8B,wBAA0B,GAAa,EAAE,gBAAiB,CAAA,EAC5G,OAAA,OAAO,QAAQ,EAAE,GAAG,mCAAoC,IAAM,KAAK,KAAK,gBAAA,CAAiB,CAClG,EACA,QAAS,CACP,aAAc,UAAY,CACxB,IAAIC,EAAW,KAAK,SAChB,KAAK,uBAAyB,IAErBA,EAAA,GAEN,OAAA,aAAa,KAAK,KAAK,EACzB,KAAA,MAAQ,OAAO,WAAW,IAAM,CAC9B,KAAK,iBAAgB,EACzBA,EAAW,GAAI,CACpB,EACA,gBAAiB,gBAAkB,CAC7B,GAAA,CACI,MAAAC,EAAW,MAAM,MAAM,GAAG,KAAK,GAAG,UAAU,KAAK,QAAQ,EAAE,EACjE,GAAIA,EAAS,QAAU,KAAOA,EAAS,OAAS,IAAK,CAC7C,MAAAC,EAAgB,MAAMD,EAAS,OACrC,KAAK,WAAaC,EAAc,QAC3B,KAAA,YAAc,CAAC,CAACA,EAAc,KACnC,KAAK,uBAAyBA,EAAc,cAC5C,KAAK,aAAa,CAAA,MAEb,KAAA,MAAQ,GAAG,KAAK,GAAG,4CAA4C,CAAC,MAAMD,EAAS,UAAU,WAEzF,EAAG,CACL,KAAA,MAAQ,GAAG,KAAK,GAAG,4CAA4C,CAAC,MAAO,EAAY,OAAO,IAAA,QAC/F,CACA,KAAK,QAAU,EACjB,CACF,EAMA,SAAU,eAAgB,EAAU,CAClC,EAAE,gBAAgB,EAClB,KAAK,QAAU,GACf,KAAK,UAAY,KAAK,MACtB,MAAM,KAAK,iBACb,CACF,CACF,CAAC,OCrKK1B,EAAY,CACZ,MAAK,kBACL,cAAa,WACb,KAAA,SAAA,gBAAA,oDAO6Ba,EAAAA,mBAAA,OAAA,CAAA,MAAA,gBAAA,KAAA,EAAA,kDAQzBV,EAAM,CAAA,IAAA,GACFe,EAAQ,CAAA,MAAA,8CAwBdU,EAAgB,CAAA,IAAA,oBAIVC,EAAC,CACL,MAAA,2CACA,KAAA,cACA,gBAAc,MACd,gBAAA,IAAA,gBAAA,MAEI,MAAA,CAAA,MAAA,MAAA,uBAONC,EAAM,CAAA,IAAA,8FAvDVnB,YAMM,EAAAC,qBAAAU,EAAAA,SAAA,KAAA,CAAAT,EAAA,mBALG,IAACb,EAAA,CACOa,EAAAA,mBAAA,MAAA,CAAA,MAAAE,EAAA,eAAA,CAAA,WAAA,CAAA,aAAAV,EAAA,sBAAA,CAAA,CAAA,uCAMnB,EAAAY,EAAA,GAyDKH,CAzDL,CAAA,CAAA,EAGED,EAAA,mBAAA,KAAAX,EAAA,CACEG,EAAA,OAAAM,EAAA,UAAA,EAAAC,EAAAA,mBAAA,KAAAT,EAAA,2DAOF,CAAA,GAAAkB,EAAAA,mBAAA,GAAA,EAAA,GAAAV,YAEU,IAAUC,EAAAA,mBAAIU,EAAA,SAAA,KAAAS,EAAAA,WAAA1B,EAAA,WAAA2B,IACbrB,EAAA,UAAA,EAAcsB,EAAA,YAAAC,EAAA,CACpB,IAAIF,EAAW,KACf,KAAaA,EAAA,KACb,KAAaA,EAAA,KACb,YAAOA,EAAe,YACtB,YAAUA,EAAW,YACrB,MAAYA,EAAA,MACZ,aAAYA,EAAE,WAAA,aAAAA,EAAA,wCAGR,EAAA,KAAA,EAAO,QAAK,OAAiB,cAAA,cAAA,QAAA,aAAA,aAAA,cAAA,CAAA,EAAA,EAAA,GAAA,GAK9B,CAAA3B,EAAA,SAAA,CAAAA,EAAA,WAAA,QAAAM,EAAAA,YADVC,EAAAA,mBAAA,KAAAO,EAAAH,kBAAAX,EAAA,GAAA,+BAAA,CAAA,EAAA,CAAA,GAAAgB,EAAAA,mBAAA,GAAA,EAAA,EAAAhB,EAIE,uBAUSO,EAAAA,mBAAA,KAAAgB,EAAA,CAAAf,EAAA,mBAAA,MAAAgB,EAAA,yFAII,CAAA,CAAA,CAAA,GAAAxB,EAGb,yBACiB,EAAAO,EAAA,mBAAA,KAAAkB,EAAA,CAAAjB,EAAAA,mBACP,SAAc,CACnB,KAAA,SAAA,MAAA,++CC/DEsB,EAAOC,EAAAA,WAAW,CAC7B,OAAQ,SAAS,gBAAgB,MAAQ,KACzC,SAAU,CAAA,GACRC,EAAA,GACAC,CACF,CACF,CAAC,ECCD,SAAS,iBAA8B,qBAAqB,EAAE,QAASC,GAAS,CAC9E,MAAMC,EAAe,CAAC,IAAK,GAAI,GAAGD,EAAK,SACnC,OAAOA,EAAK,QAAQ,SAAa,MACnCC,EAAM,SAAW,OAAO,SAASD,EAAK,QAAQ,QAAQ,GAEpD,OAAOA,EAAK,QAAQ,MAAU,MAChCC,EAAM,MAAQ,OAAO,SAASD,EAAK,QAAQ,KAAK,GAElDE,YAAUC,EAAkBF,CAAK,EAAE,IAAIL,CAAI,EAAE,MAAMI,CAAI,CACzD,CAAC"}